{"version":3,"file":"main.f8ddeee00264d1dee3c5.js","mappings":"mBACA,IAAIA,EAAsB,CCD1BA,EAAwB,MCAxB,QAAe,IAA0B,sDCSzC,QAPmB,WACjB,MAAO,uKAAPC,OAEcC,EAAM,2DAEtB,ECLA,QAFkB,WAAH,4FCWf,QAXiB,WAGf,OAFAC,SAASC,MAAQ,qDAEV,uKAMT,ECTO,IAAMC,EAAY,eAIZC,EAAa,CACxB,CAAEF,MAAO,UAAWG,IAAK,KACzB,CAAEH,MAAO,YAAaG,IAAK,UAC3B,CAAEH,MAAO,WAAYG,IAAK,cCCtBC,EAAS,CACb,ICPW,WAGX,OAFAL,SAASC,MAAQ,+BAEV,2BAAPH,OAEEQ,IAAY,OAEhB,EDCE,SERY,WAA0B,IAAzBL,EAAKM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,aACrBP,SAASC,MAAQ,0CAGjB,IAAMS,EAAW,OAAHZ,OAAUG,EAAK,SAE7B,MAAO,GAAPH,OAAUY,EAAQ,UAAAZ,OACda,IAAW,OAEjB,EFAE,YGXe,WACfX,SAASC,MAAQ,uCAMjB,MAAO,GAAPH,OAHc,oBAGC,QAAAA,OAFC,qCAIlB,EHGE,OAAQc,GAkCV,QAVe,SAACC,GACd,IAAMC,EAAOd,SAASe,eAAeF,GAC/BG,EAAOd,EAAYe,OAAOC,SAASC,SAASC,MAAMlB,GAAW,GAAKe,OAAOC,SAASC,SAElFE,EAxBqB,SAACL,GAAI,OAAKX,EAAOW,IAASJ,CAAQ,CAwB3CU,CAAqBN,IArBvB,SAACF,EAAMS,GAClBT,IAKLA,EAAKU,UAAY,GACjBV,EAAKW,mBAAmB,YAAaF,GACvC,CAeEG,CAAUZ,EAAMO,KAbI,WAAgB,IAAfL,EAAIT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAC5BP,SAAS2B,iBAAiB,eAAeC,SAAQ,SAACC,GAChDA,EAAKC,UAAUC,OAAO,SAAUf,IAASa,EAAKG,aAAa,QAC7D,GACF,CAUEC,CAAcjB,EAChB,EIxCA,QAJe,WACb,MAAO,8CACT,ECEA,QAJiB,SAAHkB,GAAuB,IAAjBjC,EAAKiC,EAALjC,MAAOG,EAAG8B,EAAH9B,IACzB,MAAO,sDAAPN,OAA6DM,EAAG,MAAAN,OAAKG,EAAK,YAC5E,ECYA,QAXa,WACX,IAAMkC,EAAchC,EAAWiC,KAAI,SAACC,GAAI,OAAKC,EAASD,EAAK,IAAEE,KAAK,IAElE,MAAO,oEAAPzC,OAGQqC,EAAW,4BAGrB,ECVA,QAFe,WAAH,uCAAArC,QAA0C,IAAI0C,MAAOC,cAAa,8BC2C9E,QAjCY,SAAC3B,GAEX,IAAM4B,EAAc,UAGpB5B,EAAKW,mBACH,YAAW,SAAA3B,OAET6C,IAAQ,UAAA7C,OACR8C,IAAM,sBAAA9C,OACM4C,EAAW,2CAAA5C,OAEvB+C,IAAQ,SAKZC,EAAOJ,GAEPzB,OAAO8B,iBAAiB,YAAY,kBAAMD,EAAOJ,EAAY,IAG7D1C,SAASgD,KAAKD,iBAAiB,SAAS,SAACE,GACvC,IAAMC,EAAKD,EAAME,OAEbD,EAAGpB,UAAUsB,SAAS,gBACxBH,EAAMI,iBACNpC,OAAOqC,QAAQC,UAAU,CAAC,EAAG,GAAI,GAAFzD,OAAKI,GAASJ,OAAGoD,EAAGlB,aAAa,UAChEc,EAAOJ,GAEX,GACF,ECvCA1C,SAAS+C,iBAAiB,oBAAoB,WAE5C,IAAMjC,EAAOd,SAASe,eAAe,QAErCyC,EAAI1C,EACN,G","sources":["webpack://webpack-boilerplate-vanillajs/webpack/bootstrap","webpack://webpack-boilerplate-vanillajs/webpack/runtime/publicPath","webpack://webpack-boilerplate-vanillajs/./src/assets/js-logo.svg","webpack://webpack-boilerplate-vanillajs/./src/components/LinkToDocs.js","webpack://webpack-boilerplate-vanillajs/./src/components/AboutText.js","webpack://webpack-boilerplate-vanillajs/./src/pages/Error404.js","webpack://webpack-boilerplate-vanillajs/./src/constants/constants.js","webpack://webpack-boilerplate-vanillajs/./src/router.js","webpack://webpack-boilerplate-vanillajs/./src/pages/Home.js","webpack://webpack-boilerplate-vanillajs/./src/pages/About.js","webpack://webpack-boilerplate-vanillajs/./src/pages/Contacts.js","webpack://webpack-boilerplate-vanillajs/./src/components/Header.js","webpack://webpack-boilerplate-vanillajs/./src/components/MenuItem.js","webpack://webpack-boilerplate-vanillajs/./src/components/Menu.js","webpack://webpack-boilerplate-vanillajs/./src/components/Footer.js","webpack://webpack-boilerplate-vanillajs/./src/App.js","webpack://webpack-boilerplate-vanillajs/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.p = \"./\";","export default __webpack_public_path__ + \"images/js-logo.d1dbc73baa6e06f62defedc843cef181.svg\";","import jsLogo from '../assets/js-logo.svg';\n\nconst LinkToDocs = () => {\n  return `<p>Если что-то не понятно, то идем читать документацию:</p>\n  <p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\" target=\"_blank\">\n    <img src=\"${jsLogo}\" class=\"docs-logo\" alt=\"JavaScript logo\" />\n  </a></p>`;\n};\n\nexport default LinkToDocs;\n","const AboutText = () => `<article>Какой-то изменяемый текст об этом замечательном проекта на SPA!</article>`;\n\nexport default AboutText;\n","const Error404 = () => {\n  document.title = \"Achtung, warning, kujdes, attenzione, pozornost...\";\n\n  return `\n    <section class=\"error-page\">\n      <h1>Ошибка 404</h1>\n      <p>Страница не найдена, попробуйте вернуться на <a href=\"/\">главную</a>.</p>\n    </section>\n  `;\n};\n\nexport default Error404;\n","export const HOST_PATH = '/webpack-spa';\n\nexport const USERS_API_URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const MENU_ITEMS = [\n  { title: 'Главная', url: '/' },\n  { title: 'О проекте', url: '/about' },\n  { title: 'Контакты', url: '/contacts' },\n];\n","import Home from './pages/Home.js';\nimport About from './pages/About.js';\nimport Contacts from './pages/Contacts.js';\nimport Error404 from './pages/Error404.js';\n\nimport { HOST_PATH } from './constants/constants.js';\n\n// объявляем объект роутов и наших компонентов страниц\nconst routes = {\n  '/': Home,\n  '/about': About,\n  '/contacts': Contacts,\n  '/404': Error404,\n};\n\n// функция получения компонента из объекта роутов\nconst getComponentFromPath = (path) => routes[path] || Error404;\n\n// функция перерисовки компонентов\nconst updateDOM = (root, htmlContent) => {\n  if (!root) {\n    console.error('Specified root container not found in the document.');\n    return;\n  }\n\n  root.innerHTML = '';\n  root.insertAdjacentHTML('beforeend', htmlContent);\n};\n\nconst setActiveLink = (path = '/') => {\n  document.querySelectorAll('.menu__link').forEach((link) => {\n    link.classList.toggle('active', path === link.getAttribute('href'));\n  });\n};\n\n// функция получения пути (роута) и сопоставление его с компонентом\nconst Router = (container) => {\n  const root = document.getElementById(container);\n  const path = HOST_PATH ? window.location.pathname.split(HOST_PATH)[1] : window.location.pathname;\n  console.log(path);\n  const component = getComponentFromPath(path);\n\n  updateDOM(root, component());\n  setActiveLink(path);\n};\n\nexport default Router;\n","import LinkToDocs from '../components/LinkToDocs';\n\nconst Home = () => {\n  document.title = 'Главная страница примера SPA';\n\n  return `\n  <h1>Главная</h1>\n  ${LinkToDocs()}\n  `;\n};\n\nexport default Home;\n","import AboutText from '../components/AboutText.js';\n\nconst About = (title = 'О проекте!') => {\n  document.title = 'Какой-то описательный текст данного SPA';\n\n  // пример генерирование контента с использованием приходящих аргументов\n  const titleEle = `<h1>${title}</h1>`;\n\n  return `${titleEle}\n    ${AboutText()}\n  `;\n};\n\nexport default About;\n","const Contacts = () => {\n  document.title = 'Ну и страница Контакты, как без нее?';\n\n  // пример добавление контента через переменные, которые можно сгенерировать\n  const title = '<h1>Контакты</h1>';\n  const content = '<p>Пишите письма - будем рады.</p>';\n\n  return `${title}\n  ${content}`;\n};\n\nexport default Contacts;\n","const Header = () => {\n  return `<header class=\"header\">My first SPA</header>`;\n};\n\nexport default Header;\n","const MenuItem = ({ title, url }) => {\n  return `<li class=\"menu__item\"><a class=\"menu__link\" href=\"${url}\">${title}</a></li>`;\n};\n\nexport default MenuItem;\n","import MenuItem from './MenuItem.js';\nimport { MENU_ITEMS } from '../constants/constants.js';\n\nconst Menu = () => {\n  const menuContent = MENU_ITEMS.map((item) => MenuItem(item)).join('');\n\n  return `\n    <nav class=\"menu\">\n      <ul class=\"menu__list\">\n        ${menuContent}\n      </ul>\n    </nav>`;\n};\n\nexport default Menu;\n","const Footer = () => `<footer class=\"footer\">&copy; ${new Date().getFullYear()} All looks good!</footer>`;\n\nexport default Footer;\n","import Router from './router';\nimport Header from './components/Header';\nimport Menu from './components/Menu';\nimport Footer from './components/Footer';\n\nimport { HOST_PATH } from './constants/constants';\n\nimport './normalize.css';\nimport './App.css';\n\nconst App = (root) => {\n  // обозначаем id контейнера для отрисовки страниц\n  const containerId = 'content';\n\n  // отрисовываем статические компоненты и контейнер для страниц\n  root.insertAdjacentHTML(\n    'beforeend',\n    `\n    ${Header()}\n    ${Menu()}\n    <section id=${containerId} class=\"content\">\n    </section>\n    ${Footer()}\n  `\n  );\n\n  // Инициализируем роутер при первой загрузке\n  Router(containerId);\n  // Обработка навигации\n  window.addEventListener('popstate', () => Router(containerId));\n\n  // Перехватываем все клики по ссылкам для роутера\n  document.body.addEventListener('click', (event) => {\n    const el = event.target;\n    console.log(el);\n    if (el.classList.contains('menu__link')) {\n      event.preventDefault();\n      window.history.pushState({}, '', `${HOST_PATH}${el.getAttribute('href')}`);\n      Router(containerId);\n    }\n  });\n};\n\nexport default App;\n","import App from './App';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // находим нащ контейнер для рендера (предполагается, что он есть)\n  const root = document.getElementById('root');\n  // рендерим наш первый компонент\n  App(root);\n});\n"],"names":["__webpack_require__","concat","jsLogo","document","title","HOST_PATH","MENU_ITEMS","url","routes","LinkToDocs","arguments","length","undefined","titleEle","AboutText","Error404","container","root","getElementById","path","window","location","pathname","split","component","getComponentFromPath","htmlContent","innerHTML","insertAdjacentHTML","updateDOM","querySelectorAll","forEach","link","classList","toggle","getAttribute","setActiveLink","_ref","menuContent","map","item","MenuItem","join","Date","getFullYear","containerId","Header","Menu","Footer","Router","addEventListener","body","event","el","target","contains","preventDefault","history","pushState","App"],"sourceRoot":""}